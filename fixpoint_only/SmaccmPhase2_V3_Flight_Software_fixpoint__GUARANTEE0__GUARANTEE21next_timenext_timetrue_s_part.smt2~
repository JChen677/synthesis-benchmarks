(define-fun T ((%init Bool) ($time$0 Real) ($next_time$0 Real) ($__GUARANTEE0$0 Bool) ($__GUARANTEE1$0 Bool) ($__GUARANTEE2$0 Bool) ($time$1 Real) ($next_time$1 Real) ($__GUARANTEE0$1 Bool) ($__GUARANTEE1$1 Bool) ($__GUARANTEE2$1 Bool)) Bool (and (= $__GUARANTEE0$1 (and (and (ite %init (= $time$1 (/ 0 10)) true) (>= $time$1 (/ 0 10))) (ite %init true (> $time$1 $time$0)))) (= $__GUARANTEE1$1 (and (> $next_time$1 $time$1) (ite %init true (= $next_time$0 $time$1)))) (= $__GUARANTEE2$1 (and (<= (/ 50 10) (- $next_time$1 $time$1)) (< (- $next_time$1 $time$1) (/ 500 10))))))
(declare-fun %init () Bool)
(declare-fun $time$0 () Real)
(declare-fun $__GUARANTEE0$0 () Bool)
(declare-fun $__GUARANTEE1$0 () Bool)
(declare-fun $__GUARANTEE2$0 () Bool)
(declare-fun $time$~1 () Real)
(declare-fun $next_time$~1 () Real)
(declare-fun $__GUARANTEE0$~1 () Bool)
(declare-fun $__GUARANTEE1$~1 () Bool)
(declare-fun $__GUARANTEE2$~1 () Bool)
(declare-fun $next_time$0 () Real)
(assert (T %init $time$~1 $next_time$~1 $__GUARANTEE0$~1 $__GUARANTEE1$~1 $__GUARANTEE2$~1 $time$0 $next_time$0 $__GUARANTEE0$0 $__GUARANTEE1$0 $__GUARANTEE2$0))
(assert true)
(assert (and
  (>= $next_time$~1 0.0)
  (not (<= $next_time$~1 $time$~1))
  (let ((a!1 (and (>= $next_time$~1 0.0)
                  (not (<= $next_time$~1 $time$~1))
                  (or (not (= $time$0 0.0))
                      (not (>= $time$0 0.0))
                      (<= $time$0 $time$~1)
                      (not (= $next_time$~1 $time$0))
                      (<= $next_time$~1 $time$~1)))))
    (not a!1))
   true))
